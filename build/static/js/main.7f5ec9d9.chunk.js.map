{"version":3,"sources":["components/DetailCrypto.jsx","components/ListCrypto.jsx","App.js","index.js"],"names":["DetailCrypto","props","useState","dataChart","setDataChart","useEffect","dataArr","result","price","map","item","index","push","labels","datasets","label","name","backgroundColor","borderColor","borderWidth","data","changeGraphic","ListCrypto","cryptoName","setCryptoName","change","setChange","numberToMoney","money","toLocaleString","style","currency","className","scope","src","image","market_cap_rank","current_price","high_24h","low_24h","price_change_24h","price_change_percentage_24h","toFixed","market_cap","type","data-bs-toggle","data-bs-target","onClick","e","target","id","tabIndex","aria-labelledby","aria-hidden","htmlFor","data-bs-dismiss","aria-label","sparkline_in_7d","App","getData","setGetData","axios","method","url","headers","then","response","catch","error","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAkEeA,EA/DM,SAACC,GAAW,IAAD,EACIC,mBAAS,IADb,mBACvBC,EADuB,KACZC,EADY,KAoD9B,OAjDAC,qBAAU,WACR,IAAIC,EAAU,GACVC,EAAS,EACbN,EAAMO,MAAMC,KAAI,SAACC,EAAMC,IAChBA,EAAQ,GAAK,KAAO,GACvBJ,GAAkB,GAClBD,EAAQM,KAAKL,GACbA,EAAS,GAETA,GAAUG,KAIdN,EAAa,CACXS,OAAQ,CACN,SACA,UACA,YACA,WACA,SACA,WACA,UAEFC,SAAU,CACR,CACEC,MAAM,GAAD,OAAKd,EAAMe,MAChBC,gBAAiB,CACf,0BACA,0BACA,0BACA,0BACA,2BACA,2BAEFC,YAAa,CACX,qBACA,wBACA,wBACA,wBACA,yBACA,yBAEFC,YAAa,EACbC,KAAMd,QAIX,CAACL,EAAMe,OAGR,mCACGf,EAAMoB,cACL,cAAC,OAAD,CAAMD,KAAMjB,IAEZ,cAAC,MAAD,CAAKiB,KAAMjB,OCmGJmB,EA5JI,SAAC,GAAc,IAAZF,EAAW,EAAXA,KAAW,EAGKlB,mBAAS,IAHd,mBAGxBqB,EAHwB,KAGZC,EAHY,OAIJtB,oBAAS,GAJL,mBAIxBuB,EAJwB,KAIjBC,EAJiB,KASzBC,EAAgB,SAACC,GACrB,OAAOA,EAAMC,eAAe,QAAS,CACnCC,MAAO,WACPC,SAAU,SAId,OACE,mCACE,wBAAOC,UAAU,mBAAjB,UACE,gCACE,+BACE,oBAAIC,MAAM,QACV,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,qBACA,oBAAIA,MAAM,MAAV,8BACA,oBAAIA,MAAM,MAAV,gCACA,oBAAIA,MAAM,MAAV,uBACA,oBAAIA,MAAM,aAGd,gCACGb,EAAKX,KAAI,SAACC,EAAMC,GACf,OACE,qCACE,+BACE,oBAAIqB,UAAU,mBAAd,SACE,qBAAKA,UAAU,YAAYE,IAAKxB,EAAKyB,UAEvC,oBAAIH,UAAU,mBAAd,SAAkCtB,EAAK0B,kBACvC,oBAAIJ,UAAU,mBAAd,SAAkCtB,EAAKM,OACvC,oBAAIgB,UAAU,mBAAd,SACGL,EAAcjB,EAAK2B,iBAEtB,oBAAIL,UAAU,mBAAd,SACGL,EAAcjB,EAAK4B,YAEtB,oBAAIN,UAAU,mBAAd,SACGL,EAAcjB,EAAK6B,WAEtB,oBAAIP,UAAU,mBAAd,SACGtB,EAAK8B,iBAAmB,EACvB,qBAAIR,UAAU,gCAAd,cACIL,EAAcjB,EAAK8B,qBAGvB,oBAAIR,UAAU,+BAAd,SACGL,EAAcjB,EAAK8B,sBAIzB9B,EAAK+B,4BAA8B,EAClC,qBAAIT,UAAU,gCAAd,gBACMtB,EAAK+B,4BAA4BC,QAAQ,MAG/C,qBAAIV,UAAU,+BAAd,eACKtB,EAAK+B,4BAA4BC,QAAQ,MAGhD,oBAAIV,UAAU,mBAAd,SACGL,EAAcjB,EAAKiC,cAEtB,qBAAIV,MAAM,MAAV,UACG,IACD,wBACED,UAAU,kBACVY,KAAK,SACLC,iBAAe,QACf7B,KAAMN,EAAKM,KACX8B,iBAAA,uBAAgCnC,GAChCoC,QAAS,SAACC,GAAD,OAAOxB,EAAcwB,EAAEC,OAAOjC,OANzC,2BAYJ,6BACE,qBACEgB,UAAU,aACVkB,GAAE,sBAAiBvC,GACnBwC,SAAS,KACTC,kBAAgB,oBAChBC,cAAY,OALd,SAOE,qBAAKrB,UAAU,wBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,oBACEA,UAAU,8BACVkB,GAAG,oBAFL,+CAMA,sBAAKlB,UAAU,wCAAf,UACE,uBACEA,UAAU,mBACVY,KAAK,WACLM,GAAG,yBACHH,QAAS,SAAAC,GAAC,OAAItB,GAAYD,MAE5B,uBACEO,UAAU,mBACVsB,QAAQ,yBAFV,+BAOF,wBACEV,KAAK,SACLZ,UAAU,YACVuB,kBAAgB,QAChBC,aAAW,aAGf,qBAAKxB,UAAU,aAAf,SACE,cAAC,EAAD,CACExB,MAAOE,EAAK+C,gBAAgBjD,MAC5BQ,KAAMO,EACNF,cAAiBI,MAGrB,qBAAKO,UAAU,eAAf,SACE,wBACEY,KAAK,SACLZ,UAAU,oBACVuB,kBAAgB,QAHlB,4CCjGXG,MAhCf,WAAgB,IAAD,EACiBxD,mBAAS,IAD1B,mBACNyD,EADM,KACGC,EADH,KAkBb,OAhBAvD,qBAAU,WACRwD,IAAM,CACJC,OAAQ,MACRC,IATJ,sJAUIC,QAAS,CAAE,eAAgB,sBAE1BC,MAAK,SAAUC,GAEdN,EAAWM,EAAS9C,SAErB+C,OAAM,SAAUC,GACfC,QAAQC,IAAIF,QAEf,IAID,qBAAKpC,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,wBAAd,gCAEA,qBAAKA,UAAU,YAAf,SACE,cAAC,EAAD,CAAYZ,KAAMuC,YC3B5BY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.7f5ec9d9.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Line, Bar } from \"react-chartjs-2\";\n\nconst DetailCrypto = (props) => {\n  const [dataChart, setDataChart] = useState({});\n\n  useEffect(() => {\n    let dataArr = [];\n    let result = 0;\n    props.price.map((item, index) => {\n      if ((index + 1) % 24 === 0) {\n        result = result / 24;\n        dataArr.push(result);\n        result = 0;\n      } else {\n        result += item;\n      }\n    });\n\n    setDataChart({\n      labels: [\n        \"Monday\",\n        \"Tuesday\",\n        \"Wednesday\",\n        \"Thursday\",\n        \"Friday\",\n        \"Saturday\",\n        \"Sunday\",\n      ],\n      datasets: [\n        {\n          label: `${props.name}`,\n          backgroundColor: [\n            \"rgba(255, 99, 132, 0.2)\",\n            \"rgba(54, 162, 235, 0.2)\",\n            \"rgba(255, 206, 86, 0.2)\",\n            \"rgba(75, 192, 192, 0.2)\",\n            \"rgba(153, 102, 255, 0.2)\",\n            \"rgba(255, 159, 64, 0.2)\",\n          ],\n          borderColor: [\n            \"rgba(255,99,132,1)\",\n            \"rgba(54, 162, 235, 1)\",\n            \"rgba(255, 206, 86, 1)\",\n            \"rgba(75, 192, 192, 1)\",\n            \"rgba(153, 102, 255, 1)\",\n            \"rgba(255, 159, 64, 1)\",\n          ],\n          borderWidth: 1,\n          data: dataArr,\n        },\n      ],\n    });\n  }, [props.name]);\n\n  return (\n    <>\n      {props.changeGraphic ? (\n        <Line data={dataChart} />\n      ) : (\n        <Bar data={dataChart} />\n      )}\n    </>\n  );\n};\n\nexport default DetailCrypto;\n","import React, { useEffect, useState } from \"react\";\nimport DetailCrypto from \"./DetailCrypto\";\n\nconst ListCrypto = ({ data }) => {\n\n\n  const [cryptoName, setCryptoName] = useState(\"\");\n  const [change,setChange] = useState(true);\n\n\n\n  // NUMBER TO MONEY\n  const numberToMoney = (money) => {\n    return money.toLocaleString(\"en-US\", {\n      style: \"currency\",\n      currency: \"USD\",\n    });\n  };\n\n  return (\n    <>\n      <table className=\"table text-white\">\n        <thead>\n          <tr>\n            <th scope=\"col\"></th>\n            <th scope=\"col\">Rank</th>\n            <th scope=\"col\">Name </th>\n            <th scope=\"col\">Price</th>\n            <th scope=\"col\">High 24h</th>\n            <th scope=\"col\">Low 24h</th>\n            <th scope=\"col\">Price Change 24h</th>\n            <th scope=\"col\">Price Change % 24h</th>\n            <th scope=\"col\">MarketCap</th>\n            <th scope=\"col\"></th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((item, index) => {\n            return (\n              <>\n                <tr>\n                  <td className=\"p-2 bd-highlight\">\n                    <img className=\"img-icon \" src={item.image}></img>\n                  </td>\n                  <td className=\"p-2 bd-highlight\">{item.market_cap_rank}</td>\n                  <td className=\"p-2 bd-highlight\">{item.name}</td>\n                  <td className=\"p-2 bd-highlight\">\n                    {numberToMoney(item.current_price)}\n                  </td>\n                  <td className=\"p-2 bd-highlight\">\n                    {numberToMoney(item.high_24h)}\n                  </td>\n                  <td className=\"p-2 bd-highlight\">\n                    {numberToMoney(item.low_24h)}\n                  </td>\n                  <td className=\"p-2 bd-highlight\">\n                    {item.price_change_24h > 0 ? (\n                      <td className=\"p-2 bd-highlight text-success\">\n                        +{numberToMoney(item.price_change_24h)}\n                      </td>\n                    ) : (\n                      <td className=\"p-2 bd-highlight text-danger\">\n                        {numberToMoney(item.price_change_24h)}\n                      </td>\n                    )}\n                  </td>\n                  {item.price_change_percentage_24h > 0 ? (\n                    <td className=\"p-2 bd-highlight text-success\">\n                      % +{item.price_change_percentage_24h.toFixed(2)}\n                    </td>\n                  ) : (\n                    <td className=\"p-2 bd-highlight text-danger\">\n                      % {item.price_change_percentage_24h.toFixed(2)}\n                    </td>\n                  )}\n                  <td className=\"p-2 bd-highlight\">\n                    {numberToMoney(item.market_cap)}\n                  </td>\n                  <th scope=\"col\">\n                    {\" \"}\n                    <button\n                      className=\"btn btn-primary\"\n                      type=\"button\"\n                      data-bs-toggle=\"modal\"\n                      name={item.name}\n                      data-bs-target={`#exampleModal${index}`}\n                      onClick={(e) => setCryptoName(e.target.name)}\n                    >\n                      Details\n                    </button>\n                  </th>\n                </tr>\n                <tr>\n                  <div\n                    className=\"modal fade\"\n                    id={`exampleModal${index}`}\n                    tabIndex=\"-1\"\n                    aria-labelledby=\"exampleModalLabel\"\n                    aria-hidden=\"true\"\n                  >\n                    <div className=\"modal-dialog modal-xl\">\n                      <div className=\"modal-content\">\n                        <div className=\"modal-header \">\n                          <h5\n                            className=\"modal-title text-dark me-5 \"\n                            id=\"exampleModalLabel\"\n                          >\n                            Crypto Average Last 7days Graphic\n                          </h5>\n                          <div className=\"form-check form-switch ms-5 text-dark\">\n                            <input\n                              className=\"form-check-input\"\n                              type=\"checkbox\"\n                              id=\"flexSwitchCheckDefault\"\n                              onClick={e => setChange((!change))}\n                            />\n                            <label\n                              className=\"form-check-label\"\n                              htmlFor=\"flexSwitchCheckDefault\"\n                            >\n                              Change Graphic\n                            </label>\n                          </div>\n                          <button\n                            type=\"button\"\n                            className=\"btn-close\"\n                            data-bs-dismiss=\"modal\"\n                            aria-label=\"Close\"\n                          ></button>\n                        </div>\n                        <div className=\"modal-body\">\n                          <DetailCrypto\n                            price={item.sparkline_in_7d.price}\n                            name={cryptoName}\n                            changeGraphic = {change}\n                          ></DetailCrypto>\n                        </div>\n                        <div className=\"modal-footer\">\n                          <button\n                            type=\"button\"\n                            className=\"btn btn-secondary\"\n                            data-bs-dismiss=\"modal\"\n                          >\n                            Close\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </tr>\n              </>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default ListCrypto;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport ListCrypto from \"./components/ListCrypto\";\n\nconst API =\n  \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=30&page=1&sparkline=true&price_change_percentage=24h \";\n\n\n//application/json\nfunction App() {\n  const [getData, setGetData] = useState([]);\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: API,\n      headers: { \"Content-type\": \"application/json\" },\n    })\n      .then(function (response) {\n\n        setGetData(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n\n  \n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <h2 className=\"text-center mt-5 mb-5\">24h Crypto Tracker</h2>\n       \n        <div className=\"col-sm-12\">\n          <ListCrypto data={getData}></ListCrypto>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}